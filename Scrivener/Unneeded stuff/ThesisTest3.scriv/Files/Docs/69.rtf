{\rtf1\ansi\ansicpg1252\cocoartf1138
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
\deftab720
\pard\pardeftab720\sl300\sb240\pardirnatural

\f0\b\fs26 \cf0 First Option for Algorithm/Approach \
\pard\pardeftab720\sl300\sa120\pardirnatural

\f1\b0\fs20 \cf0 MatchLists is an array contains n lists of Word Matches, where n is the number of phones in the origPhoneSequence.\
foreach(Phone p in origPhoneSequence) \
\{\
	set SubSequence to be empty;\
	set the list of Matches to be empty;\
	set the list of Candidates to be the whole dictionary\
	set Phone* curLast to &p\
	do\
	\{	\
		append curLast to SubSequence\
		remove words in Candidates that don't begin with SubSequence\
		if any word in Candidates is an exact match of SubSequence\
		\{	\
			add word to Matches\
		\}\
		increment curLast to point to the next phone in origPhoneSequence \
	\}\
	while ( curLast != NULL) (there are phones left in origPhoneSequence)\
	copy Matches list to a list of MatchLists\
\}\
Word* findValidOronyms( SequenceToInterpret)\
foreach (Phone p in SequenceToInterpret) \
\{\
	clear LyricOption (a list of possible wordLyrics);\
	get p's associated Matches from MatchLists\
	foreach ( Word w in p's Matches)\
	\{\
		extract phones from w into wordPhones\
		call findValidOronyms on (sequenceToInterpret \'96 wordPhones at front)\
		if findValidOronyms returns NULL, move on to next word W\
		else ////SOMEHOW GET THE WORD SEQUENCE\'85.\
	\}\
\}}