{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww13140\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs32 \cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 dedupedTaskList = []\
\
uniqueURLlist = buildUniqueURLlist()\
\
workerIdIndex = 15 		#WorkerID, column P\
urlIndex = 27 			#input.audioURL, column AB\
taskIdIndex = 0 		#hitID, column A\
submitDateIndex = 18 	#submitTime column S\
statusIndex = 16		#AssignmentStatus, column Q\
answerIndex = 28 		#Answer.answer, column AC\
countryIndex = 29 		#Answer.country, column AD\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 for urlString in uniqueURLlist\
\
	urlTaskList = allTasksWithURL(origHitList, urlString)\
	\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 	#set default hash entry to a blank list \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 	workerCountDict = defaultdict(list)\
\
	for HIT in urlTaskList\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 		workerCountDict[ HIT[workerIDIndex] ].append(HIT) \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
	for workerHITList in workerCountDict\
		dedupedTaskList.add( getEarliestHit (workerHITList) )\
\
for HIT in dedupedTaskList:\
	if HIT[statusIndex] != "Rejected" and\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 		HIT[answerIndex].strip() != "" and\
		HIT[countryIndex].strip() != "" : \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 		print HIT\
\
def buildUniqueURLlist():\
	uniqueURLlist = []\
	uniqueURLlist.append(" http://ani.pe/jenee/A.20.163.wav")\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 	uniqueURLlist.append(" http://ani.pe/jenee/A.19.49.wav")\
	uniqueURLlist.append(" http://ani.pe/jenee/A.19.283.wav")\
	uniqueURLlist.append(" http://ani.pe/jenee/A.19.139.wav")\
	uniqueURLlist.append(" http://ani.pe/jenee/A.19.137.wav")\
	uniqueURLlist.append(" http://ani.pe/jenee/A.19.133.wav")\
	uniqueURLlist.append(" http://ani.pe/jenee/A.19.116.wav")\
	uniqueURLlist.append(" http://ani.pe/jenee/A.18.68.wav")\
	uniqueURLlist.append(" http://ani.pe/jenee/A.18.65.wav")\
	uniqueURLlist.append(" http://ani.pe/jenee/A.18.284.mp3")\
	uniqueURLlist.append(" http://ani.pe/jenee/A.18.140.wav")\
	uniqueURLlist.append(" http://ani.pe/jenee/A.18.140.mp3")\
	uniqueURLlist.append(" http://ani.pe/jenee/A.18.125.wav")\
	uniqueURLlist.append(" http://ani.pe/jenee/A.17.69.wav")\
	uniqueURLlist.append(" http://ani.pe/jenee/A.17.51.wav")\
	uniqueURLlist.append(" http://ani.pe/jenee/A.17.141.wav")\
	uniqueURLlist.append(" http://ani.pe/jenee/A.17.135.wav")\
	return uniqueURLlist\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 			 \
\
def allTasksWithURL(origHitList, urlString):\
	urlList = []\
	for HIT in origHitList:\
		if HIT[urlIndex] == urlString:\
			urlList.append( HIT )\
	return urlList\
			\
\
def getEarliestHit( workerHitList ):\
	sortedHitList = sorted( workerHitList, key=lamba HIT: HIT[ submitDateIndex ] ) \
	return sortedHitList[0]\
		\
\
}